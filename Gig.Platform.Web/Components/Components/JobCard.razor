<li id="@Job.Id" @onclick="SeeJobDetails">
	<h3>@Job.Name</h3>
	<p>Salary: @Job.Salary</p>
	<p>City: @Job.City</p>
	<p>Distance: @distance Km</p>
	<p>@Applications.Count() Applications</p>
	@foreach (var skill in Job.Skills)
	{
		<p class="job-skill">@skill.Name</p>
	}
	@if (hasApplied)
	{
		<p class="job-applied">You have already applied to this job</p>
	}
</li>

@code {
	[Parameter]
	public JobResponseDto Job { get; set; }
	[Parameter]
	public NavigationManager NavigationManager { get; set; }
	[Parameter]
	public ILocationService LocationService { get; set; }
	[Parameter]
	public IApplicationService ApplicationService { get; set; }
	[Parameter]
	public ClaimsPrincipal User { get; set; }

	private IEnumerable<ApplicationResponseDto> Applications { get; set; } = Enumerable.Empty<ApplicationResponseDto>();

	private int distance { get; set; }
	private bool hasApplied { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		var userLocation = LocationService.GetUserLocation();
		distance = LocationService.GetDistance(Job.Latitude, Job.Longitude);
		Applications = await ApplicationService.GetAllByJobAsync(Job.Id);
		hasApplied = Applications.Any(a => a.CandidateId == Guid.Parse(User.Claims.First(c => c.Type.Contains("nameidentifier")).Value));
	}

	private void SeeJobDetails() {
		NavigationManager.NavigateTo($"/job/{Job.Id}");
	}
}
