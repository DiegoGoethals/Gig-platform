@inject IAccountService AccountService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<form @onsubmit="Login">
	<div class="form-group">
		<label for="username">Username</label>
		<input type="text" class="form-control" id="username" placeholder="Username" required @bind="@Username">
	</div>
	<div class="form-group">
		<label for="password">Password</label>
		<input type="password" class="form-control" id="password" placeholder="Password" required @bind="@Password">
	</div>
	<button type="submit" class="btn btn-primary">Login</button>
</form>

@code {
	public string Username { get; set; }
	public string Password { get; set; }

	private async Task Login()
	{
		var dto = new AccountRequestDto
			{
				UserName = Username,
				Password = Password
			};
		var response = await AccountService.Login(dto);
		if (response != null)
		{
			if (AuthStateProvider is CustomAuthenticationStateProvider customAuthProvider)
			{
				await customAuthProvider.NotifyUserAuthentication(response.Token);
			}
			NavigationManager.NavigateTo("/");
		}
		else
		{
			Console.WriteLine("Login failed");
		}
	}
}
