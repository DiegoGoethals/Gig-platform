@inject ISkillService SkillService

<form>
	<div class="form-group">
		<label for="email">Email address</label>
		<input type="email" class="form-control" id="email" placeholder="Enter email" required>
	</div>
	<div class="form-group">
		<label for="password">Password</label>
		<input type="password" class="form-control" id="password" placeholder="Password" required>
	</div>
	<div class="form-group">
		<label for="confirmPassword">Password</label>
		<input type="password" class="form-control" id="confirmPassword" placeholder="Password" required>
	</div>
	<div class="form-group">
		<label for="firstname">First name</label>
		<input type="text" class="form-control" id="firstname" placeholder="First name" required>
	</div>
	<div class="form-group">
		<label for="lastname">Last name</label>
		<input type="text" class="form-control" id="lastname" placeholder="Last name" required>
	</div>
	<div class="form-group">
		<label for="birthday">Birthday</label>
		<input type="date" class="form-control" id="birthday" required>
	</div>
	<div class="form-group">
		<label for="role">Role</label>
		<select id="role" class="form-control mb-3" required>
			<option value="Employer">Employer</option>
			<option value="Employee">Employee</option>
		</select>
	</div>
	<div class="form-group">
		<label for="skills">Skills</label>
		<select id="skills" class="form-control mb-3" multiple>

		</select>
	</div>
	<button type="submit" class="btn btn-primary">Register</button>
</form>

@code {
	private IEnumerable<Skill> skills;

	protected override async Task OnInitializedAsync()
	{
		skills = await SkillService.GetSkillsAsync();
	}
}
